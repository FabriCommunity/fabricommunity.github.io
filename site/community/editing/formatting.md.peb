---
title: Extra Formatting
---

{% import "inline/macros" %}

# Extra Formatting

This site was built using the [Pebble template engine](https://pebbletemplates.io/), and the
[Bulma CSS framework](https://bulma.io). Together, they provide a basis for adding extra features that you can make
use of in your documents. In order to make use of Pebble's features, your document should have one of the following
extensions:

* **HTML format** - `.html.peb`
* **Markdown format** - `.md.peb`

We use Pebble to provide two forms of extra formatting - inline elements which you can import as Pebble macros, and
extra Pebble blocks that correspond to various Bulma components. This document will only cover the things we've added,
you can take a look at the [Pebble documentation](https://pebbletemplates.io/) for more information on what it can do
by default.

**Note:** Pebble only works as part of the document's content - you cannot use it in the front matter of your Markdown
documents. Additionally, including two blank lines anywhere in the document (including within the HTML generated by
Pebble's macros and block tags) will cause the Markdown parser to open a new `<p>` tag. This can cause visual
oddities when working with some inline and block elements. If that happens when working with them, it may help to
remove any unnecessary blank lines.

## Inline Elements

To make use of the inline element macros, you need to import them. We recommend placing imports just below the front
matter in your Markdown documents, as follows:

```twig
{% verbatim %}
---
title: My Document
---

{% import "inline/macros" %}

# My Document
{% endverbatim %}
```

### Inline: Button

The `button` macro takes the following parameters:

* **Required:** `url` - The URL that the button should link to
* **Required:** `text` - The text that should appear on the button
* `classes` - Space-delimited classes to add to the button's `<a>` element
* `icon_classes` Space-delimited classes to add to the icon's wrapping `<span>` element
* `icon_name` - Font-Awesome icon, including the icon set and `fa-` prefix - eg, `"far fa-globe"`
* `target` (default: `_"blank"`) - The value for the link's `target` attribute

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{{ button(
    "https://github.com/FabriCommunity/fabricommunity.github.io",
    "GitHub",
    classes="is-black",
    icon_name="fab fa-github"
) }}

{{ button(
    "https://commonmark.org/help/",
    "Markdown Cheat Sheet",
    classes="is-info",
    icon_name="fab fa-markdown"
) }}

{{ button(
    "https://pebbletemplates.io/",
    "Pebble Docs",
    classes="is-success",
    icon_name="fas fa-code"
) }}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

{{ button(
    "https://github.com/FabriCommunity/fabricommunity.github.io",
    "GitHub",
    classes="is-black",
    icon_name="fab fa-github"
) }}

{{ button(
    "https://commonmark.org/help/",
    "Markdown Cheat Sheet",
    classes="is-info",
    icon_name="fab fa-markdown"
) }}

{{ button(
    "https://pebbletemplates.io/",
    "Pebble Docs",
    classes="is-success",
    icon_name="fas fa-code"
) }}
    {% endcolumn %}
{% endcolumns %}

### Inline: Icon

The `icon` macro takes the following parameters:

* **Required:** `icon_name` - Font-Awesome icon, including the icon set and `fa-` prefix - eg, `"far fa-globe"`
* `icon_classes` Space-delimited classes to add to the icon's wrapping `<span>` element

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{{ icon("fab fa-github") }}

{{ icon("fab fa-markdown fa-lg", icon_classes="is-medium") }}

{{ icon("fas fa-code fa-2x", icon_classes="is-large") }}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

{{ icon("fab fa-github") }}

{{ icon("fab fa-markdown fa-lg", icon_classes="is-medium") }}

{{ icon("fas fa-code fa-2x", icon_classes="is-large") }}
    {% endcolumn %}
{% endcolumns %}

### Inline: Tag

The `tag` macro takes the following parameters:

* **Required:** `text` - The text to display inside the tag
* `rounded` (default: `false`) - Whether this tag should have rounded corners
* `size` (default: `"normal"`) - The tag size, one of `"normal"`, `"medium"` or `"large"`
* `style` (default: `null`) - The tag style, one of `"black"`, `"danger"`, `"dark"`, `"info"`, `"light"`, `"link"`,
  `"primary"`, `"success"`, `"warning"` or `"white"`
* `url` (default: `null`) - URL to link to, if this tag should link somewhere

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{{ tag(
    "3 viewers",
    style="info",
    rounded=true
) }}

{{ tag(
    "Beginner",
    size="medium",
    style="success",
    rounded=true
) }}

{{ tag(
    "Advanced",
    size="large",
    style="warning",
    rounded=true
) }}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

{{ tag(
    "3 viewers",
    style="info",
    rounded=true
) }}

{{ tag(
    "Beginner",
    size="medium",
    style="success",
    rounded=true
) }}

{{ tag(
    "Advanced",
    size="large",
    style="warning",
    rounded=true
) }}
    {% endcolumn %}
{% endcolumns %}

## Block elements

To make life easier for you, we've created several extra Pebble tags. You can use them whenever you need to make use
of the equivalent Bulma components. All of these tags take an optional string argument - you can add additional CSS
classes by providing the string, if you need them.

**Note:** While you can indent the content of any Pebble tag safely in a Markdown document (as indented code blocks are
disabled), we recommend only indenting nested Pebble tags and avoiding indenting your Markdown.

### Block: Box

You can create a [Bulma box](https://bulma.io/documentation/elements/box/) using the `box` and `endbox` tags.

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{% box %}
[Banana Man - Tally Hall](https://www.youtube.com/watch?v=yModCU1OVHY)

* Do you want a banana?
* Peel it down and go mm-mm-mm-mm
* Do you want a banana?
* This banana for you
{% endbox %}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

{% box %}
[Banana Man - Tally Hall](https://www.youtube.com/watch?v=yModCU1OVHY)

* Do you want a banana?
* Peel it down and go mm-mm-mm-mm
* Do you want a banana?
* This banana for you
{% endbox %}
    {% endcolumn %}
{% endcolumns %}

### Block: Breadcrumb

You can create a [Bulma breadcrumb](https://bulma.io/documentation/components/breadcrumb/) using the `breadcrumb` and
`endbreadcrumb` tags.

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{% breadcrumb %}
* [Page 1](#1)
* [Page 2](#2)
* [Page 3](#3) { .is-active }
{% endbreadcrumb %}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

        {% breadcrumb %}
* [Page 1](#1)
* [Page 2](#2)
* [Page 3](#3) { .is-active }
        {% endbreadcrumb %}
    {% endcolumn %}
{% endcolumns %}

### Block: Buttons

You can create a [Bulma button group](https://bulma.io/documentation/elements/button/#button-group) using the
`buttons` and`endbuttons` tags. You can use this to position a group of buttons together on the same line (with
wrapping), but be careful not to add too many blank lines, or the Markdown parser will insert `<p>` tags and break the
layout.

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{% buttons %}
{{ button(
    "https://github.com/FabriCommunity/fabricommunity.github.io",
    "GitHub",
    classes="is-black",
    icon_name="fab fa-github"
) }} {{ button(
    "https://commonmark.org/help/",
    "Markdown Cheat Sheet",
    classes="is-info",
    icon_name="fab fa-markdown"
) }} {{ button(
    "https://pebbletemplates.io/",
    "Pebble Docs",
    classes="is-success",
    icon_name="fas fa-code"
) }}
{% endbuttons %}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

        {% buttons %}
{{ button(
    "https://github.com/FabriCommunity/fabricommunity.github.io",
    "GitHub",
    classes="is-black",
    icon_name="fab fa-github"
) }} {{ button(
    "https://commonmark.org/help/",
    "Markdown Cheat Sheet",
    classes="is-info",
    icon_name="fab fa-markdown"
) }} {{ button(
    "https://pebbletemplates.io/",
    "Pebble Docs",
    classes="is-success",
    icon_name="fas fa-code"
) }}
        {% endbuttons %}
    {% endcolumn %}
{% endcolumns %}

### Block: Columns

When working with [Bulma columns](https://bulma.io/documentation/columns/), you have access to both the
`columns`/`endcolumns` and `column`/`endcolumn` tags. You always need a `columns` container around a set of `column`
block tags.

We recommend not relying on automatic column sizing, and instead always using
[Bulma's size classes](https://bulma.io/documentation/columns/sizes/) on your columns.

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{% columns %}
    {% column "is-one-third" %}
        {% box %}
Text

Text
        {% endbox %}
    {% endcolumn %}
    {% column "is-two-thirds" %}
        {% box %}
Text

Text
        {% endbox %}
    {% endcolumn %}
{% endcolumns %}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

        {% columns %}
            {% column "is-one-third" %}
                {% box %}
Text

Text
                {% endbox %}
            {% endcolumn %}
            {% column "is-two-thirds" %}
                {% box %}
Text

Text
                {% endbox %}
            {% endcolumn %}
        {% endcolumns %}
    {% endcolumn %}
{% endcolumns %}

### Block: Image Wrapper

When inserting images into your documents, you will likely want those images to scale responsively based on screen size.
To that end, you can use the `image` and `endimage` tags to wrap images in an image-wrapper element.

You may also find the `has-border` class useful to apply a simple border around the image, to help it stand out from
the background.

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{% image "has-border" %}
[![Fork button location](/static/images/community/editing/git/1-fork.png)](/static/images/community/editing/git/1-fork.png)
{% endimage %}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

        {% image "has-border" %}
[![Fork button location](/static/images/community/editing/git/1-fork.png)](/static/images/community/editing/git/1-fork.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

### Block: Levels

When working with [Bulma levels](https://bulma.io/documentation/layout/level/), you can make use of the following tags:

* `level`/`endlevel` - Level container
* `level_item`/`end_level_item` - Level item element
* `level_left`/`end_level_left` - Container for level items on the left side
* `level_right`/`end_level_right` - Container for level items on the right side

The example below is a recreation of one of
[Bulma's example layouts](https://bulma.io/documentation/layout/level/#centered-level).

#### Example

{% level "box is-mobile" %}
    {% level_item "has-text-centered" %}
[Home](#)
    {% end_level_item %}

    {% level_item "has-text-centered" %}
[Menu](#)
    {% end_level_item %}

    {% level_item "has-text-centered" %}
[![Bulma logo](https://bulma.io/images/bulma-type.png){ style="height: 30px;" }](https://bulma.io)
    {% end_level_item %}

    {% level_item "has-text-centered" %}
[Reservations](#)
    {% end_level_item %}

    {% level_item "has-text-centered" %}
[Contact](#)
    {% end_level_item %}
{% endlevel %}

```twig
{% verbatim %}
{% level "box is-mobile" %}
    {% level_item "has-text-centered" %}
[Home](#)
    {% end_level_item %}

    {% level_item "has-text-centered" %}
[Menu](#)
    {% end_level_item %}

    {% level_item "has-text-centered" %}
[![Bulma logo](https://bulma.io/images/bulma-type.png){ style="height: 30px;" }](https://bulma.io)
    {% end_level_item %}

    {% level_item "has-text-centered" %}
[Reservations](#)
    {% end_level_item %}

    {% level_item "has-text-centered" %}
[Contact](#)
    {% end_level_item %}
{% endlevel %}
{% endverbatim %}
```

### Block: Message

When creating a [Bulma message](https://bulma.io/documentation/components/message/) element, you can make use of the
following tags:

* `message`/`endmessage` - Message container element
* `message_header`/`end_message_header` - Message header text
* `message_body`/`end_message_body` - Message body paragraphs

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{% message "is-info" %}
    {% message_header %}Enlarging images{% end_message_header %}

    {% message_body %}
If you're having a hard time reading any of the tutorial images,
feel free to click on them to enlarge them, or hold the `CTRL`
(or `Command` on macOS) key while clicking on an image to open it
in a new tab.
    {% end_message_body %}
{% endmessage %}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

        {% message "is-info" %}
            {% message_header %}Enlarging images{% end_message_header %}

            {% message_body %}
If you're having a hard time reading any of the tutorial images,
feel free to click on them to enlarge them, or hold the `CTRL`
(or `Command` on macOS) key while clicking on an image to open it
in a new tab.
            {% end_message_body %}
        {% endmessage %}
    {% endcolumn %}
{% endcolumns %}

### Block: Tags

You can create a [Bulma tag list](https://bulma.io/documentation/elements/tag/#list-of-tags) using the
`tags` and`endtags` tags. You can use this to position a group of tags together on the same line (with
wrapping), but be careful not to add too many blank lines, or the Markdown parser will insert `<p>` tags and break the
layout.

{% columns %}
    {% column "is-two-thirds" %}
#### Example

```twig
{% verbatim %}
{% tags %}
{{ tag(
    "3 viewers",
    size="medium",
    style="info",
    rounded=true
) }} {{ tag(
    "Beginner",
    size="medium",
    style="success",
    rounded=true
) }} {{ tag(
    "Intermediate",
    size="medium",
    style="warning",
    rounded=true
) }} {{ tag(
    "Advanced",
    size="medium",
    style="danger",
    rounded=true
) }}
{% endtags %}
{% endverbatim %}
```
    {% endcolumn %}

    {% column "is-one-third" %}
#### Output

        {% tags %}
{{ tag(
    "3 viewers",
    size="medium",
    style="info",
    rounded=true
) }} {{ tag(
    "Beginner",
    size="medium",
    style="success",
    rounded=true
) }} {{ tag(
    "Intermediate",
    size="medium",
    style="warning",
    rounded=true
) }} {{ tag(
    "Advanced",
    size="medium",
    style="danger",
    rounded=true
) }}
        {% endtags %}
    {% endcolumn %}
{% endcolumns %}
