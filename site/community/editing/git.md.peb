---
title: Git Basics
---

# Git Basics

While this site was created by developers, we do not require writers to be developers. However, we've found that the
best way for us to keep track of everything is [on GitHub](https://github.com/FabriCommunity/fabricommunity.github.io),
which very much _is_ a developer tool. As a result, we've written this document for people that would like to write
for us, but may not have used Git or GitHub before.

{% columns %}
    {% column "is-half is-offset-one-quarter" %}
        {% message "is-info" %}
            {% message_header %}Enlarging images{% end_message_header %}

            {% message_body %}
If you're having a hard time reading any of the tutorial images, feel free to click on them to enlarge them, or hold
the `CTRL` (or `Command` on macOS) key while clicking on an image to open it in a new tab.
            {% end_message_body %}
        {% endmessage %}
    {% endcolumn %}
{% endcolumns %}

In this tutorial, we will be making use of [GitHub Desktop](https://desktop.github.com/). If you're a Linux user, you
can use [this Linux build](https://github.com/shiftkey/desktop#packagecloud) instead. Before continuing, please
download and install GitHub Desktop, and [create a GitHub account](https://github.com/join) if you haven't already.

## Setting up: GitHub Repository

The first thing you'll need to do is create your own copy of the site on your GitHub account. This is known as a
"fork", and it allows you to make changes independently of anything we're working on. To do this, go to
[our GitHub repository](https://github.com/FabriCommunity/fabricommunity.github.io) and click the "fork" button at
the top-right. **If GitHub asks you where to fork to**, click on your username.

This will create a new copy of the repository that you can work on. It should open in your browser automatically.

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Fork button location](/static/images/community/editing/git/1-fork.png)](/static/images/community/editing/git/1-fork.png)
        {% endimage %}
    {% endcolumn %}

    {% column %}
        {% image "has-border" %}
[![Fork location](/static/images/community/editing/git/2-fork-location.png)](/static/images/community/editing/git/2-fork-location.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

Once you've created your fork, you'll need to download it to your computer to start working on it.

## Setting up: Cloning the Repository

Next, you'll need to set up GitHub Desktop and download the repository to your computer. The act of downloading a copy
of a repository is known as "cloning".

Once you've installed GitHub Desktop, open it and log into your GitHub account. You'll be presented with a screen
similar to the image marked with `1` below, with your GitHub repositories listed on the right. Click on your fork,
which will be named `username/fabricommunity.github.io`, and then on the blue `Clone` button at the bottom of the
window.

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Main screen](/static/images/community/editing/git/3-main-screen.png)](/static/images/community/editing/git/3-main-screen.png)
        {% endimage %}
    {% endcolumn %}

    {% column %}
        {% image "has-border" %}
[![Repo list](/static/images/community/editing/git/4-repo-list.png)](/static/images/community/editing/git/4-repo-list.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

You will be presented with a dialog asking you where you'd like to clone the repository to. If you're happy with the
location it gives you then you can simply click the `Clone` button - if not, click the `Choose` button first and pick
a folder you'd like to place your copy of the repository into.

If GitHub Desktop asks you how you're planning to use your fork, select `To contribute to the parent project` and click
the `Continue` button.

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Clone dialog](/static/images/community/editing/git/5-clone-dialog.png)](/static/images/community/editing/git/5-clone-dialog.png)
        {% endimage %}
    {% endcolumn %}

    {% column %}
        {% image "has-border" %}
[![Fork usage dialog](/static/images/community/editing/git/6-fork-usage.png)](/static/images/community/editing/git/6-fork-usage.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

## Setting up: Creating a Branch

You're almost done - there's just one thing left to do before you can start working. It's always best to keep your
changes on a separate branch - essentially, branches exist to keep sets of changes separate from each other, and you
should always work on a branch other than `root` or `gh-pages`.

Click the `Current branch` button at the top of the window, and then on the `New branch` button. Give it a short name
related to what you're changing, without spaces - for example, `git-doc` - and click on `Create branch`.

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Branch list](/static/images/community/editing/git/7-branch-list.png)](/static/images/community/editing/git/7-branch-list.png)
        {% endimage %}
    {% endcolumn %}

    {% column %}
        {% image "has-border" %}
[![New branch](/static/images/community/editing/git/8-new-branch.png)](/static/images/community/editing/git/8-new-branch.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

Finally, click on the `Publish branch` button to upload your new branch to GitHub. This should leave you with a screen
similar to the image marked with `4` below.

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Publish Branch](/static/images/community/editing/git/9-publish-branch.png)](/static/images/community/editing/git/9-publish-branch.png)
        {% endimage %}
    {% endcolumn %}

    {% column %}
        {% image "has-border" %}
[![Ready](/static/images/community/editing/git/10-ready.png)](/static/images/community/editing/git/10-ready.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

## Making Changes

Now that you've got everything set up, get yourself a text editor (like Visual Studio Code) and get to writing! For
information on the specifics of editing documents and articles, please take a look at the other links in the left
sidebar.

Once you've modified some files, come back to GitHub Desktop. It's time to tell GitHub about the changes you've made
by collecting your changes into a "commit", and uploading it to GitHub - which is known as "pushing".

On the left side of the window is the `Changes` tab. This lists every file you created, removed or made changes to.
Ensure that the box next to each file is checked, and then enter your commit message. In the first, smaller box, you
should write a short summary of your changes. Be descriptive, but try to keep it short. If you need to add extra
information, you can use the larger box to do so.

When you're ready, click on the `Commit` button. This will create your commit - but you'll still need to push it to
GitHub!

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Commit changes](/static/images/community/editing/git/11-commit.png)](/static/images/community/editing/git/11-commit.png)
        {% endimage %}
    {% endcolumn %}

    {% column %}
        {% image "has-border" %}
[![Commit message](/static/images/community/editing/git/12-commit-message.png)](/static/images/community/editing/git/12-commit-message.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

Once you've created your commit, click on the `Push origin` button at the top of the window. This will upload your
changes to GitHub, where they can be viewed by anyone!

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Push changes](/static/images/community/editing/git/13-push.png)](/static/images/community/editing/git/13-push.png)
        {% endimage %}
    {% endcolumn %}

    {% column %}
        {% image "has-border" %}
[![Done](/static/images/community/editing/git/14-done.png)](/static/images/community/editing/git/14-done.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

You can repeat this process as many times as you like as you continue to make changes. You don't have to push every
commit individually, either - feel free to create a few commits and push them together if you prefer. We advise that
you commit relatively often - this allows you to keep track of your changes over time - and, if something goes wrong,
you'll more easily be able to roll back to a previous commit (you can do this from the `History` tab, but it's
out of scope of this document.)

## Submitting Changes for Inclusion

If you need feedback from us, or you're happy with your changes, click the blue `Create Pull Request` button and
the GitHub pull request page will open in a browser.

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Push changes](/static/images/community/editing/git/15-pr-button.png)](/static/images/community/editing/git/15-pr-button.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

Once you're on GitHub proper, give your pull request a title and a description. If possible, include screenshots of
your work in the description, and explain what changes you made and why you made them. If you're still working on
your submission then you can click the `Create draft PR` button, and your new pull request will be created and marked
as a work-in-progress. Otherwise, if you're finished with your submission and are ready for feedback, click the
`Create pull request` button.

Once your pull request is open, we'll be notified, and we'll take a look at it as soon as we can! If you have any other
changes to make, then you can continue to create and push commits - they'll be added to your pull request automatically.

{% columns "is-desktop" %}
    {% column %}
        {% image "has-border" %}
[![Push changes](/static/images/community/editing/git/16-create-pr.png)](/static/images/community/editing/git/16-create-pr.png)
        {% endimage %}
    {% endcolumn %}

    {% column %}
        {% image "has-border" %}
[![Push changes](/static/images/community/editing/git/17-pr-created.png)](/static/images/community/editing/git/17-pr-created.png)
        {% endimage %}
    {% endcolumn %}
{% endcolumns %}

Thanks for your contribution! When one of us has time, we'll review your pull request and provide you with feedback if
anything needs to be changed. When everyone's happy, your pull request will be merged - the changes you've made will be
included with the site, and GitHub will automatically build it and deploy it for everyone to see!
